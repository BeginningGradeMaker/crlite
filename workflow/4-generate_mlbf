#!/usr/bin/env python3

from pathlib import Path
import argparse
import os
import re
import subprocess
import sys

parser = argparse.ArgumentParser()
parser.add_argument("identifier", help="Current working identifier", nargs=1)


def main():
    args = parser.parse_args()

    if not args.identifier or len(args.identifier) != 1:
        parser.print_usage()
        sys.exit(0)

    idformat = re.compile(r"[\d]{4}[\d]{2}[\d]{2}-[\d]")

    workdir = os.path.dirname(args.identifier[0])

    dirlist = os.listdir(workdir)
    # format is yyyymmdd-nn so lexical sort is perfect, as long as we ensure well-formed choices
    filter(lambda x: idformat.match(x), dirlist)
    dirlist.sort()

    identifierName = os.path.basename(args.identifier[0])
    if identifierName not in dirlist:
        print(f"{identifierName} is not in {workdir}: {dirlist}")

    parentDir = (os.path.dirname(os.path.abspath(__file__)) / Path("..")).resolve()

    exe = os.path.expanduser(f"{parentDir}/create_filter_cascade/certs_to_crlite.py")
    cmdline = [exe, "-knownPath", os.path.join(args.identifier[0], "known"),
               "-revokedPath", os.path.join(args.identifier[0], "revoked")]

    idx = dirlist.index(identifierName)
    if idx > 0:
        previd = dirlist[idx-1]
        cmdline = cmdline + ["-previd", previd]

    cmdline = cmdline + args.identifier

    subprocess.run(cmdline, check=True)


if __name__ == "__main__":
    main()
